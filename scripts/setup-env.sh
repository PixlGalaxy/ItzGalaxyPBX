#!/usr/bin/env bash
set -euo pipefail

echo "[setup-env] Generating configs from environmentâ€¦"

# Read important envs with defaults/fallbacks
PBX_DOMAIN="${PBX_DOMAIN:-pbx.example.com}"
SIP_TLS_PORT="${SIP_TLS_PORT:-5061}"
SIP_RTP_START="${SIP_RTP_START:-10000}"
SIP_RTP_END="${SIP_RTP_END:-20000}"

EXT_200_USER="${EXT_200_USER:-200}"
EXT_200_PASS="${EXT_200_PASS:-PleaseChangeMe!}"

ASTERISK_ETC="/etc/asterisk"
FAIL2BAN_ETC="/etc/fail2ban"

mkdir -p "${ASTERISK_ETC}" "${FAIL2BAN_ETC}/jail.d" "${FAIL2BAN_ETC}/filter.d"

# ---- Asterisk PJSIP transports (TLS) ----
cat > "${ASTERISK_ETC}/pjsip.transports_custom.conf" <<EOF
; --- Generated by setup-env.sh ---
[0.0.0.0-tls](!)
type=transport
protocol=tls
bind=0.0.0.0:${SIP_TLS_PORT}
external_signaling_address=${PBX_DOMAIN}
external_media_address=${PBX_DOMAIN}
method=tlsv1_2
verify_client=no
verify_server=no
allow_reload=yes
tos=cs3
EOF
echo "[setup-env] Wrote pjsip.transports_custom.conf"

# ---- Asterisk PJSIP endpoint for demo extension 200 ----
cat > "${ASTERISK_ETC}/pjsip.endpoint_custom.conf" <<EOF
; --- Generated by setup-env.sh ---
[${EXT_200_USER}](endpoint)
type=endpoint
transport=0.0.0.0-tls
context=from-internal
disallow=all
allow=ulaw,alaw,opus
aors=${EXT_200_USER}
auth=${EXT_200_USER}
media_encryption=sdes
media_encryption_optimistic=no
force_rport=yes
rewrite_contact=yes
timers=yes
dtmf_mode=rfc4733
language=en
t38_udptl=no
direct_media=no
rtp_symmetric=yes
ice_support=no
EOF
echo "[setup-env] Wrote pjsip.endpoint_custom.conf"

# ---- AOR for the extension ----
cat > "${ASTERISK_ETC}/pjsip.aor_custom.conf" <<EOF
; --- Generated by setup-env.sh ---
[${EXT_200_USER}](aor)
type=aor
max_contacts=3
remove_existing=yes
EOF
echo "[setup-env] Wrote pjsip.aor_custom.conf"

# ---- Auth for the extension ----
cat > "${ASTERISK_ETC}/pjsip.auth_custom.conf" <<EOF
; --- Generated by setup-env.sh ---
[${EXT_200_USER}](auth)
type=auth
auth_type=userpass
username=${EXT_200_USER}
password=${EXT_200_PASS}
EOF
echo "[setup-env] Wrote pjsip.auth_custom.conf"

# ---- Minimal dialplan for inbound (dongle) and outbound via dongle ----
cat > "${ASTERISK_ETC}/extensions_custom.conf" <<'EOF'
; --- Generated by setup-env.sh ---
[from-trunk]
exten => s,1,NoOp(Incoming call from GSM dongle)
 same => n,Answer()
 same => n,Dial(PJSIP/200,30)
 same => n,Voicemail(200@default,u)
 same => n,Hangup()

[outbound-gsm]
exten => _X.,1,NoOp(Outbound via GSM dongle to: ${EXTEN})
 same => n,Dial(Dongle/dongle0/${EXTEN},60)
 same => n,Hangup()
EOF
echo "[setup-env] Wrote extensions_custom.conf"

# ---- Fail2ban jail (auth brute force) ----
cat > "${FAIL2BAN_ETC}/jail.d/asterisk.local" <<EOF
# --- Generated by setup-env.sh ---
[asterisk-auth]
enabled = true
filter  = asterisk-auth
action  = iptables-multiport[name=ASTERISK, port="${SIP_TLS_PORT}", protocol=tcp]
logpath = /var/log/asterisk/full
maxretry = 5
findtime = 600
bantime  = 86400
EOF
echo "[setup-env] Wrote fail2ban jail: asterisk.local"

# ---- Fail2ban filter (auth failures) ----
cat > "${FAIL2BAN_ETC}/filter.d/asterisk-auth.conf" <<'EOF'
# --- Generated by setup-env.sh ---
[Definition]
failregex = ^\[\S+\] NOTICE.* Failed to authenticate device .*$
            ^\[\S+\] NOTICE.* Registration from '.*' failed for '(<HOST>)'.*$
            ^\[\S+\] WARNING.* No matching peer found for '.*' from '(<HOST>)'.*$
            ^\[\S+\] NOTICE.* ChallengeSent.* to '.*' from '(<HOST>)'.*$
            ^\[\S+\] WARNING.* Rejecting unknown SIP connection from '(<HOST>)'.*$

ignoreregex =
EOF
echo "[setup-env] Wrote fail2ban filter: asterisk-auth.conf"

echo "[setup-env] Done."
